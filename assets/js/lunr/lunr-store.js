var store = [{
        "title": "Happy New Year - And Resolutions!",
        "excerpt":"2007 has come and gone, and now it is 2008. Last year has seen a lot of improvements in and around Quassel IRC, and we are now very close to the first releaseable version. In fact, we, the developers and some early testers/helpers/fans are running Quassel Cores on our servers to stress-test (and of course enjoy) them! We now mainly lack some features in the GUI and some improvements in internal structures to be able to release Quassel to the public. And this is my resolution for 2008: Get Quassel IRC out of the door ASAP, and then continue to make this the bestest IRC client ever!  ","categories": [],
        "tags": [],
        "url": "/2008/01/happy-new-year-and-resolutions/",
        "teaser": null
      },{
        "title": "My First Blog Post",
        "excerpt":"This is not only my first post on Quassel IRC but my very first blog post at all.   I have to say that I’m pretty excited about what’s happening in the last few weeks. The improvements on Quassel have been enormous. There’ve been already more than 50 commits this month. Having just checked in Revision 353 and waiting for Sput’s next big commit (which hopefully doesn’t break anything - I’m always scared if someone says: dude I’m just reorganizing the multithreading in the core…), I’m having some leisure time, which I want to use tell you a bit about the current state of Quassel IRC.  So where are we at and what does that mean for you? The first public release of Quassel IRC obviously comes closer and closer and just seems to be a footsetp away. More and more items are being removed from our Roadmap leaving only a few, not very difficult things to be done. So when Sput is done with is current work, we’ll have a better organized core with lesser threads resulting in less overhead for keeping things threadsafe. In addition the setup process will be more intuitive (at least we think so), as some of our pre-alpha-whatchamacallait version pointed out that it’s a bit confusing.   And the state of this blog? You might wonder, why this is the first Blog Post about Quassel though the development of Quassel has already been going on for quite some time. Well it’s basically because due to the fact that we’re more about coding and bringing Quassel IRC to you and less about blogging.   I hope we can keep you a bit more informed in the future here. Meanwhile you’re invited to join #quassel on Freenode to keep up with the very latest news.   Cheers,  EgS  ","categories": [],
        "tags": [],
        "url": "/2008/01/my-first-blog-post/",
        "teaser": null
      },{
        "title": "Home Stretch",
        "excerpt":"Well, EgS speaking of 50 commits in January until the 17th. Turned out to be 125 commits until the end of the month, and another 55 commits in the eight days of February already… development speed is increasing, and we can now see the light at the end of the tunnel (and it’s not a train coming at us). We are fighting some stability issues and we still need to fix a couple of things, but we are now very confident that we can release Quassel within the month!  So what does being on the Home Stretch feel like? It’s just nice to see all the pieces falling in place. We built up a solid foundation during the past year, and we can now reap what we’ve sown. This means that now many of the small details are being worked on, fixed and implemented, and every day Quassel gets another feature sorely missed before by me or others. We, the devs and our beta testers (a special thanks to int and adamt!), now have started using Quassel IRC as our main client more and more, which in turn leads us to focus on all the small things that are still missing. Yes, we are getting ready for prime-time!   We’ll keep you posted.  ~ Sput  ","categories": [],
        "tags": [],
        "url": "/2008/02/home-stretch/",
        "teaser": null
      },{
        "title": "Quassel On The Road!",
        "excerpt":"I’m going to FOSDEM, the Free and Open Source Software Developers’ European Meeting!   Yep, I’ll be there, probably partying with the Gentoo or Amarok people. We also plan to finally release Quassel to the public on FOSDEM. So if you like to learn more about Quassel or even see it in action, FOSDEM is your chance :)   Preparing for the the Beer Event,  ~ Sputnick  ","categories": [],
        "tags": [],
        "url": "/2008/02/quassel-on-the-road/",
        "teaser": null
      },{
        "title": "Quassel IRC is released!",
        "excerpt":"It is finally here - quassel-0.2.0-alpha1, Quassel’s long-awaited first public release! This is still an alpha version, so it still has some quirks, and it still lacks some features that may or may not be important for you. That said, we (the devs) have been using it as our main client for weeks now, and we are fairly happy with it, so it can’t hurt to give it a try!   Only this release sets your computer on fire, eats your dog and is probably highly addictive.   If you happen to be at FOSDEM right now, you might be able to catch me near the KDE/Amarok booth, or during the Free Beer Event tonight :)   Happy Quasseling,  ~ Sputnick  ","categories": [],
        "tags": [],
        "url": "/2008/02/quassel-irc-is-released/",
        "teaser": null
      },{
        "title": "Universal Binary Build available now for Mac OS X",
        "excerpt":"I just switched to universal binaries, so the Mac Client will be able to run on PPC Macs as well as on the new intel ones. Get it in the “Get Quassel!” section or right here.   Currently there is only the Client build. If you’re interessted in precompiled Mac builds for the Quassel Core or the Monolithic Quassel, then please let me know.  ","categories": [],
        "tags": [],
        "url": "/2008/02/universal-binary-build-available-now-for-mac-os-x/",
        "teaser": null
      },{
        "title": "alpha2 soon to come",
        "excerpt":"It’s always amazing how easily one can be destracted from learning… Despite having an exam next tuesday I’ve spent most of this day on fixing bugs and tweaking things for -alpha2. Sput’s already fixed one of the major bugs: the client crash during first run network setup. So what to expect from -alpha2? Actually not much more than from -alpha1. :) Find a list of the fixes and features after the jump.       fixed a bug where the client crashes during first run network setup   fixed a bug where the encoding was not correctly applied to /me-style messages   fixed “ghost” buffers showing up in the “All Network” view.   Notices and Messages like “no such nick or channel” can now be displayed in the status buffer, the current buffer or still the original target buffer (have a look at the general settings of your client)   some cosmetic improvements (uncluttered the default client layout a bit and fixed widths of the Nicklist and Buffer Views)   one can now switch buffers with the mousewheel while hovering over a bufferview (thanks to Ian “eean” Monroe for the patch)   We’ve added some more infos to the FAQ-Section, like some of the cool undocumented features of quassel, that came to our mind.   If you have any questions or suggestions, feel invited to join #quassel or #quassel.de on Freenode.  ","categories": [],
        "tags": [],
        "url": "/2008/02/alpha2-soon-to-come/",
        "teaser": null
      },{
        "title": "alpha2 has been released!",
        "excerpt":"A few days later than planned, we have released quassel-0.2.0-alpha2! We used the extra days to iron out some annoying bugs, such as the crash on first run some users experienced, and made the sync-to-core process much faster.   More features include:   Sane first-run layout of dockwidgets Various UI enhancements Buffer switching via mousewheel (thanks Ian \"eean\" Monroe for the patch!) Redirection of notices and server messages to the status buffer or the current buffer Various bugfixes   Upgrading is recommended!   Packages for *buntu and Debian will appear on the downloads page during the next few days, as well as updated builds for Windows and MacOSX.   Have fun with the shiny new -alpha2!  ~ Sputnick  ","categories": [],
        "tags": [],
        "url": "/2008/03/alpha2-has-been-released/",
        "teaser": null
      },{
        "title": "CeBIT Day One",
        "excerpt":"Hi there,   blogging live from CeBIT, Hanover, Germant, Worls’d largest IT fair :) This time I am not promoting Quassel, but I am part of the Amarok Promo Team. Be sure to check out the bestest music player in the world! Still using Quassel though :) While part of the KDE and Amarok people here chose to find some restaurant and eat, sven423 and me decided to enjoy the free booth parties :) Since we have only a few more minutes until security kicks us out for good, just a few notes:    World's largest IT fair is unable to provide internet access during the day Booth parties rock! :) If you are looking for us: Hall 5, Booth E61/3 Pizza delivery directly to the booth works :)   So much for now, hoping to get internet access tomorroy night at some point again :)   ~ Sput  ","categories": [],
        "tags": [],
        "url": "/2008/03/cebit-day-one/",
        "teaser": null
      },{
        "title": "quassel-0.2.0-alpha3 has landed!",
        "excerpt":"We are pleased to announce the immediate release of alpha3! This release contains many performance improvements, especially during core sync and backlog replay. Furthermore, buffer switches should now be much faster. Also, the sync-to-core process now is not only faster, but also much more reliable than in alpha2, where sometimes not all channels were synced. As a bonus feature, you’ll get an all new topic widget that displays mIRC-style formatting, and various other GUI tweaks.   Please note that we have broken both the client/core protocol and the database schema with this release. This means you cannot connect with an older client to an alpha3 core or vice versa. The database schema will be automatically upgraded once you run your shiny new core for the first time. Please note that after this upgrade, you will no longer be able to run a pre-alpha3 core with your database! As always, backups are recommended :)   So get it while it’s hot! Updated distro packages and precompiled binaries will soon be available on the download page.  ","categories": [],
        "tags": [],
        "url": "/2008/03/quassel-0-2-0-alpha3-has-landed/",
        "teaser": null
      },{
        "title": "Static alpha3 core for Linux",
        "excerpt":"Many people don’t have Qt installed on their servers (even though the needed parts can be installed without X11), which makes using Quassel quite cumbersome. I have been looking into providing a static core (i.e. one that does not have external dependencies like Qt) for a while now, but on Linux, this is surprisingly hard. Anyway, on the download page you’ll now find an experimental core to try out even on servers without Qt.   Note that this is highly experimental, since certain features seem to require a compatible shared glibc installed. Also on one of my test systems, charset encodings don’t work, because iconv cannot be used even though it is installed… so please test it, and if anything is strange, please report.  ","categories": [],
        "tags": [],
        "url": "/2008/03/static-alpha3-core-for-linux/",
        "teaser": null
      },{
        "title": "Nightly Snapshots",
        "excerpt":"We now provide nightly source tarballs, as well as a statically linked core for Linux, MacOSX client binaries and Windows binaries. Please be aware of the fact that these binaries are generated automatically from current SVN HEAD, which means they might be in an untested and/or non-working state. We do not recommend using them until you know what you’re doing, but since people kept asking for them, well, here they are :)   Please note that we still tweak and break the core/client protocol on a regular basis. This means that your client sometimes will require a certain core revision and the other way round. For example, the current nightly clients do not run with alpha4 cores. Both client and core will warn in this case, but you should be aware of that fact anyway (especially since downgrades of config files or the database are usually not possible, so using a client or core that is “too new” might require you to upgrade the other component as well! You’ll find even more disclaimers on the download page.  ","categories": [],
        "tags": [],
        "url": "/2008/04/nightly-snapshots/",
        "teaser": null
      },{
        "title": "YAQIA!",
        "excerpt":"We’ve released Yet Another Quassel IRC Alpha! Besides various bugfixes (the nick selector works again!), quassel-0.2.0-alpha4 brings you some real nice new features:   The backlog is now dynamically replayed from the core. This means as you scroll further up in a buffer, new backlog lines will be automagically requested and displayed. This gives you the possibility to scroll up \"infinitely\", well, up to the point where you first entered that channel... Server passwords work now. Just enter them in the server edit dialog (Settings -&gt; General -&gt; Networks -&gt; Edit Server). Highlighted messages now make your systray icon flash and/or display a shiny bubble. Configurable under Settings -&gt; Behavior -&gt; General.   This release also breaks the core/client protocol (again, and it won’t be the last time), so both your core and client need to be alpha4 to work.  ","categories": [],
        "tags": [],
        "url": "/2008/04/yaqia/",
        "teaser": null
      },{
        "title": "Releasing the (hopefully) final Alpha for Quassel 0.2.0!",
        "excerpt":"It is with great pleasure that we announce immediate availability of what will probably/hopefully/may be the last and final alpha release before we go into the beta cycle. As usual, this alpha release brings you bugfixes and new features, UI tweaks and more goodies, and we highly recommend upgrading. Especially since we fixed a very nasty issue in Quassel Core… and yeah, the fonts should now be working as well :) Also, we can finally provide a precompiled Quassel Core and monolithic Quassel for Windows™, so you should now be able to use it without having access to a *nix server… And we don’t forget the MacOSX Tiger users either and now provide a package that runs on both MacOSX 10.4 and 10.5.   For a more detailed list of important changes, read on!    Bugfixes:     Stopped quasselcore from potentially filling up your database with millions of strings when receiving invalid CTCP   A saner autowho implementation avoids throttling when sending messages to some networks, removing that annoying send lag you might have experienced   Font issues (garbled fonts, wrong formatting…) have been fixed   Finally allow parallel makes (make -j)   Made the core run on Windows™ as well   Made Quassel compile and run on MacOSX 10.4 (Tiger)   Features:     Custom highlights   Lots of UI tweaks   QuasselTopia compiles and sorta runs again… well, this is still highly work-in-progress and probably breaks again soon enough.   We will now work on finalizing the feature list and removing the last outstanding issues for Quassel’s first beta release, which we expect to release in a couple of weeks.  ","categories": [],
        "tags": ["release"],
        "url": "/2008/04/releasing-the-hopefully-final-alpha-for-quassel-0-2-0/",
        "teaser": null
      },{
        "title": "What's going on?",
        "excerpt":"Got asked today what’s happening on the Quassel front, since there haven’t been many commits in the past few days, which, after several weeks of frantically committing stuff, is quite unusual… To calm down everybody: even though all devs currently are quite busy at work and in the so-called, yet mythical “Real Life” (which explains while we have gotten somewhat more quiet lately), we are still working on Quassel as well :) Read on for details on Quassel’s current state and our plans for the near future!    We have put the 0.2.x branch in feature freeze, since we believe that Quassel IRC is now featureful enough to be usable. We plan to release a beta soon, followed by an RC and the final hopefully not too far in the future.   While we keep using and testing and fixing 0.2.x, we have started work on the 0.3 branch (which is not trunk yet, since we don’t want to screw up the people keeping current with svn builds). This branch will include a complete new message handling architecture on the client side, based on Qt’s MVC classes. This will allow us to implement much more flexible buffers (e.g. containing merged contents from multiple channels/queries, a highlight buffer and more), and it should also be much more efficient RAM-wise. We will have yet to see how efficient that turns out to be speed-wise though… This architecture will enable us to finally start real work on the famous new ChatWidget, which will just be a view on the MessageModel (or various filtering proxy models).   Another point on the agenda for 0.3 is the long-awaited plugin interface, though we are not sure yet how extensive this will be - if we manage to implement a full-flegged scripting interface in the not too distant future, or if we’ll only provide a few hooks for simple plugins as a temporary work-around…   So while our commit count seems to be down, and our channels are a little bit more dormant than usual, rest assured that a lot of good stuff is going on behind the scenes :)   Back to work.  ~ Sput  ","categories": [],
        "tags": [],
        "url": "/2008/04/whats-going-on/",
        "teaser": null
      },{
        "title": "β",
        "excerpt":"Yes, we can finally announce the release of Quassel’s very first beta! With entering the beta cycle, we also enter feature freeze for the 0.2 branch. While we are still stabilizing this branch, we are busy working on tons of new features and larger arch changes in the 0.3 branch, which we’ll probably talk about in another blog entry soon…   Read on for the release notes for quassel-0.2.0-beta1!  There have been many bugfixes, some performance improvements and some new features. Most notably: The bufferviews are now fully customizable! You can create and edit views using the settings dialog (F7) -&gt; General -&gt; Buffer Views. Buffers can be reordered using drag’n’drop, you can hide inactive buffers and much more. All your views will be stored on the core, so you can share them amongst your clients. Please note that there currently is one known bug where new buffers will not always be shown in custom views. They are visible in the “All Buffers” view though and can be dragged from there into custom views.   Also nice to know is that we have now a flood protection (throttling your messages in order to prevent you from being kicked from the network), and we have fixed the huge lag that you might have experienced on some networks.   And now, get it while it’s hot!   Have fun,  ~ Sputnick  ","categories": [],
        "tags": ["release"],
        "url": "/2008/05/beta/",
        "teaser": null
      },{
        "title": "Quassel IRC at Linuxtag (Berlin)",
        "excerpt":"Yep, Your’s Truly will be present at Linuxtag in Berlin this Wednesday till Saturday! As I did at CeBIT in March, I’ll be helping out at the Amarok booth again. If you happen to be at Linuxtag as well, don’t hesitate to stop by at the booth and say hello!  ","categories": [],
        "tags": [],
        "url": "/2008/05/quassel-irc-at-linuxtag-berlin/",
        "teaser": null
      },{
        "title": "Switching to Git",
        "excerpt":"As of now, we have switched our public repository from Subversion to Git. While Git takes some time getting used to, it makes development easier for us, and also it is hip and shiny and new - plus what’s good for Linus can’t be bad for us, eh? :)   You can access the public repo as follows: git clone git://git.quassel-irc.org/quassel.git   ","categories": [],
        "tags": [],
        "url": "/2008/06/switching-to-git/",
        "teaser": null
      },{
        "title": "Quassel at ohloh",
        "excerpt":"Thanks to Flameeyes, we now have an official presence at the very cool “Social Network for Open Source Developers” called ohloh. If you are a Quassel user, don’t hesitate to stop by and show the world :)  ","categories": [],
        "tags": [],
        "url": "/2008/06/quassel-at-ohloh/",
        "teaser": null
      },{
        "title": "Switching to CMake",
        "excerpt":"After our switch to Git as our version control system, we now also have changed our build system from qmake to CMake. Long-time Quassulans will know that we already had a CMake-based build system before switching to qmake in the first place :) Back then, we decided we’d need qmake to support Qtopia, plus CMake was quite clumsy at the time (and our old build system was uber-complex). Now, it has turned out that we can easily generate Qtopia build files from any build system, plus in the meantime our qmake stuff has grown much more complex than the old system ever was - and it came to the point where qmake just couldn’t do all we needed it to do anymore.  So now we’re back to CMake. You’ll find build instructions in INSTALL.cmake (soon that will be moved to INSTALL). It has been tested on Linux, MacOSX and Windows. It is also much simpler than our old CMake-based build system, as CMake has evolved, removing the need for some of the ugly workarounds we had. Thanks to Flameeyes, we also finally have a “make install” that installs the binaries and .desktop files where they belong; soon to be followed by application icons. And last but not least, it’s colorful and shiny :)   So if you happen to run buildscripts or similar, please migrate them over to the new build system, since we will be removing the qmake stuff in a few days!  ","categories": [],
        "tags": [],
        "url": "/2008/06/switching-to-cmake/",
        "teaser": null
      },{
        "title": "Mac OS X nightlys back on track",
        "excerpt":"After all the hazzle that came with the switch from svn to git and qmake to cmake, I’m glad to tell you, that the nightly builds for Mac OS X are available again. Currently there are only Mac OS X nightlys for 0.2 but that is about to change soonish. Get them as usual at http://quassel-irc.org/nightly/macosx/  ","categories": [],
        "tags": [],
        "url": "/2008/06/mac-os-x-nightlys-back-on-track/",
        "teaser": null
      },{
        "title": "Releasing a candidate",
        "excerpt":"After being on a bugfixing spree the past couple of weeks, the Quassel Team proudly gives you our first-ever Release Candidate of what shall become quassel-0.2.0. Since the 0.2 branch has been in feature freeze for a while, you probably won’t find much new stuff (except for the occasional feature that might have crept in completely unnoticed of course ;-)), but on the other hand you will also find less bugs than in the previous releases, so grab it while it’s still steaming!  ","categories": [],
        "tags": ["release"],
        "url": "/2008/07/releasing-a-candidate/",
        "teaser": null
      },{
        "title": "rc1 will (hopefully) be the last Release Candidate... ever!",
        "excerpt":"Just to give you a heads-up: With the release of 0.2.0 (which we expect during the next few weeks) we’ll switch to a versioning scheme that is more consistent to other projects. This means that from then on, we will be releasing new patch-level releases rather than going the alpha/beta/rc cycle. The latter made sense as long as we didn’t have a version that we considered complete enough to be a real release. Based on user feedback and our own experience, we feel quite confident about releasing 0.2.0 very soon now.   Roughly around the same time, we’ll also release a 0.3.0 version, so people willing to play with the new stuff can get proper releases as well. The 0.3 series will be considered a development branch. Future will tell if we stick with that (i.e. odd minors = devel releases, even minors = stable releases). We plan to put a lot of experimental and exciting stuff into 0.3, so this series will probably be alive for quite a while (while 0.2 will only see major bugfixes in the future, but no new features).  ","categories": [],
        "tags": [],
        "url": "/2008/07/rc1-will-hopefully-be-the-last-release-candidate-ever/",
        "teaser": null
      },{
        "title": "Let there be, uhm, 0.3.0...1!",
        "excerpt":"After quite a long while, we finally present to you a new shiny Quassel IRC release! It so happened that we decided to call it 0.3.0.1, which, as attentive readers will certainly notice in an instant, is not the long-expected 0.2.0 (and not even 0.3.0, for that matter). So, uhm, what’s up with those Quassel developers and their versioning scheme?   As some of you know, we have been working on a rewrite of the old ChatWidget for quite some time now, and it was always planned that this rewrite would end up as a 0.3 release, whereas the old ChatWidget would live in 0.2. It turned out that we would not only rewrite the ChatWidget (which is now called ChatView), but also most of the client-side message handling. We have switched to a Model-View-Controller-based architecture now. Other than being much easier to maintain and improve on, this approach also allows maximum resource sharing (for example, a chatline is now only stored once, no matter how many ChatViews display it). This results in a Quassel Client that needs much less RAM than versions from the 0.2 branch. Also, we have been (and still are) working on making things more efficient both time- and space-wise, and the current 0.3.0.1 client is already much leaner and meaner than 0.2.0-rc1.   In addition to that architectural rewrite and the optimizations, with the new ChatView and its new and improved code base we could finally start adding new features and improvements to your chat window. So you’ll notice a bunch of new stuff, like visible column handles, a last-seen remember line, in-buffer search and more. I won’t give you a comprehensive list of new features this time, since it’s just too much - just check it out for yourself!    So, back to versioning. We’ve been developing 0.3 in parallel while stabilizing 0.2.0 for several months, when we suddenly noticed that 0.3 had become more stable than 0.2 in the meantime, in addition to all the new features and shiny stuff it got… sure, there are still some minor regressions caused by rewriting everything, but overall, we were much happier with 0.3 than with 0.2. And since it doesn’t make sense to maintain an inferior version that is not even more stable than the new stuff, well, we decided to pull a Larry[*] and just skip over to 0.3.0.   Of course, and in accordance to Murphy’s Law, it took us less than an hour after the tagging to realize that some really annoying bugs had crept into the release in the last minute. So we decided to, well, skip over 0.3.0 as well, worked hard during the past week to fix the most annoying bugs, and now finally officially let this bugfix release out in the wild :)   Since Murphy never sleeps, it took us only 2 minutes after tagging this time until we got alerted that 0.3.0.1 won’t actually build on Windows, and MacOSX. But, oh well. If you plan to build your own binaries on those platforms, please get a current checkout of the 0.3.0-backport branch rather than the 0.3.0.1 tag. On our download page, you’ll find pre-built binaries for all platforms as usual.   Oh, you probably are not surprised by now that we’ve changed the core/protocol between the 0.2 and 0.3 versions, so you should be aware of the fact that a 0.2 client won’t work with a 0.3 core and vice versa. Upgrading the core will work seamless, upgrading the client will remove custom color settings you might have had, but otherwise work seamless as well. As usual, downgrades are not supported.   Another known issue is that Quassel Client will start eating CPU after running for a while (a day or so). We are working on finding the cause for that, but for now, please bear with us.   Now enough of the blabbering, go grab your shiny new Quassel and have fun with it :)   ~ Sputnick   [*] There never was a fourth part!  ","categories": [],
        "tags": ["release"],
        "url": "/2008/09/let-there-be-uhm-0-3-0-1/",
        "teaser": null
      },{
        "title": "Fan Mail",
        "excerpt":"So a couple days ago, I had a nice surprise in my mailbox:   &lt;/img&gt;   Sent by jussi01 all the way from Finland to Germany, as a huge Thank You for the development team :) Needless to say that, while it might not increase productivity at our next devmeeting, it surely increases the dev team’s motivation to continue to make Quassel rock!   Thanks a bunch jussi01, and we’re looking forward to crack that bottle open for reaching the Ballmer Peak soonish :)   On an unrelated note, the Quassel team will be present at the Qt Developer Days in Munich next week, so if you happen to attend those, be sure to have a chat with us :)  ","categories": [],
        "tags": [],
        "url": "/2008/10/fan-mail/",
        "teaser": null
      },{
        "title": "Finalizing 0.3.0",
        "excerpt":"Most people visiting our channel #quassel at Freenode already know that we have tagged the supposedly last bugfix release for the 0.3.0 branch a couple weeks ago. We have shied away from publicly announcing the release since we usually want to have binaries for all platforms ready first. Anyway, since our Linux buildbox is going to be out of service for at least a few more weeks, we are now officially releasing quassel-0.3.0.2, available on our download page!   This release only contains the remaining bugfixes based on 0.3.0. Compared to 0.3.0.1, these are some build system fixes and an issue with the topic widget. There are no new features, as 0.3.0.x expressly is a bugfix branch.   Windows users can be happy, since we now provide a monolithic client again! This means, those of you running a local core can now use the more convenient integrated binary again. On the other hand, Linux users won’t find a static core, but the one from 0.3.0.1 hasn’t changed anyway…   Assuming no real blockers surface in the future, this release marks the end of supporting 0.3.0. We are concentrating on getting shiny new features into trunk and the upcoming 0.3.1 release instead :)  ","categories": [],
        "tags": ["release"],
        "url": "/2008/10/finalizing-0-3-0/",
        "teaser": null
      },{
        "title": "What I took away from Munich",
        "excerpt":"The Quassel development team (yes, in full force) has been at the Trolltech Qt Developer Days in Munich again. As last year, Trolltech Nokia has generously invited us to the conference in the shiny Hilton hotel. We had a great time, met a lot of interesting people and saw several interesting talks. Our thanks go in particular to Knut Yrvin, Qt Software’s community manager, for making this possible.   A few random points I took away from that event:     Trolls are still called Trolls. They even got a new batch of shirts saying \"I am a troll\" Thought Nokia would just kill off Qt and be done with it? Think again. They really push hard to get it predominant on mobile platforms. Rumors about Qt being ported to yet more (mobile) platforms are of course totally unfounded. Except if you read between the lines. Maemo is going to see some interesting development as well. Qt will be an integral part of it in one of the next releases. Trolltech Qt Software hires. Another sign of Nokia wanting to see Qt succeed. Too bad I've already got a job for the next couple years... I really, really, really want Qt 4.5. Now. NOW!1!! Some \"business people\" really have a hard time understanding Open Source developers. The concept of people doing work in their free time without being sponsored seems to be a strange one outside of our nice cozy free world... Along those lines: Yes, we would gladly accept donations and support from companies. Besides delivering you a great chat client, we'd make sure your company gets a honorable mention on our web page and in Quassel's About dialog. But there is no way that we'd put advertisements in Quassel, much less ones that get in the way. Even if some business people seem to think that ad banners and popups are the only way to get corporate sponsorship, something like that is clearly off-limits for a free and open source project. Either your company thinks that our project deserves sponsoring in its own right and wants to support it for what it is, or it can give its money to a project that does not care about ethics and community, if such a project exists. The ratio of neckties goes down a lot over the days. Apparently people arrive on Monday evening expecting an all-out business event, dressed up appropriately, and then notice that there are some people (technical staff and geeks, mostly) dressed up in jeans and t-shirt instead. By Wednesday, most neckties and suits are gone... I don't really have anything against business people :) Most of them are quite eager to learn about Free software and our community, and we've had some interesting discussions. By the way, same thing happened at CeBIT earlier this year, which also mostly is a business event. It always amazes me how different our worlds are though. Being part of our community for years, it's hard to grasp for me that there are (lots of) people who haven't even heard of there being something besides the corporate, Microsoft-dominated world. Or of people spending most of their free time on providing great software or helping others. On the other hand, we in the Free Software Community have some misconceptions about the business world as well, and could learn from it in some respects. I think events like CeBIT and DevDays provide a great opportunity to get those two worlds in touch. Also, it can't hurt if the guy making strategic IT decisions in a company has at least seen that there are alternatives, or will recognize them when somebody mentions them to him later. sven423 of Amarok fame and I came up with the term \"Grassroots Lobbying\" for that at CeBIT :) People seem to like Quassel a lot, even people higher up in Qt Software's hierarchy. Seems there are some interesting perspectives for Quassel's future to be explored. Greenhouse has been announced. Yet another IDE. Looks quite shiny, and has some really nice ideas, but I still don't see it replace KDevelop4/Emacs/vi yet. Also it slightly worries me that not even Matthias Ettrich seemed to know yet if it will be released as Open Source at all. Guys, if you decide to keep it closed, you won't stand any chance of success. Let's hope you do The Right Thing! It's fun attending a Maemo workshop, and when the presenter shows around the Qt applications that he successfully got to run on the N810, he pops up Quassel. Not knowing that he is just presenting this to the Quassel dev team :) We really need to put work into getting Quassel to run on mobiles properly. I mean it works already, but it could work so much better... Breakfast at Hilton is the only occasion I know of outside of a plane where tomato juice is served. Om nom nom! Being a keynote speaker (and Vice President of the company) does not save you from not being recognized a few hours later by people who shall remain nameless. Coffee seems to be much more expensive on Day 2 compared to Day 1, as catering (like last year) refused to provide coffee and tea outside of the official coffee breaks on the second day. On the first day, it flowed all day... Don't save your drink vouchers. Bar closes without warning, and leaves you sitting on 15 euros worth of virtual alcohol without being able to convert that into the real stuff :( Other than sometimes unexpectedly not providing coffee and/or alcohol, catering was great. A nice reception, excellent food, and a ton of Hilton employees running around making sure that everything is taken care of. Providing free internet access for conference participants still seems to be not a standard. In addition, providing cell phone reception (such that one could go online via G3/UMTS) seems to not be a standard either. Well, less distraction from the talks ;-) I tried to pick up some Finnish and Norsk. I was barely able to repeat \"Guten Appetit\" in Finnish though, much less remember it :) As usual, the Trolls organized one of their famous \"first annual fun games\" at dinner. This time, we had to guess if certain provided claims were \"Crap or Fact\". Needless to say, some of those facts we really didn't want to know... Too bad, our team (\"Team Qrap\") only got 16 out of 21 right and therefore missed the opportunity to take a bunch of N810s home by a mere two points :( Speaking of dinner, it was again a lot of fun to have some trolls at our table. Knut is always a good entertainer (though he questions German humor :p), and later on we had the opportunity to discuss with Sebastian Nyström and Matthias Ettrich. After last year's Trolltech jacket, this time we got a nice Qt-branded conference bag and (finally!) a DevDays T-Shirt. Thanks! :) Die Bahn fails. Hard.   We are looking forward to go to DevDays again next year (though I would expect a location change, Hilton is really getting too small for all those people… or Qt is getting too popular?). Thanks to all the Trolls and Nokia for organizing such an event, and for letting Open Source developers participate for free. If Nokia continues supporting the community as they have since they bought Trolltech, I see a bright and shiny future for Qt and KDE.  ","categories": [],
        "tags": [],
        "url": "/2008/10/what-i-took-away-from-munich/",
        "teaser": null
      },{
        "title": "Urgent: Security Upgrade!",
        "excerpt":"Well, looks like 0.3.0.2 was not the last 0.3.0 release after all. coekie found an issue with CTCP handling in Quassel Core that allows attackers to send arbitrary IRC messages on your behalf. This issue is present in all versions prior to 0.3.0.3 and Git older than October 26th (rev. d7a0381).   This has been fixed in the quassel-0.3.0.3 release and also in Git and the nightly builds. Gentoo and *buntu already ship the new version, with more distributions hopefully following ASAP. If you still use a 0.2-rc1 core, please consider updating to 0.3.x as soon as possible. Note that we provide unstable, but fixed packages for Debian now, thanks to dileX.   Note that this affects (only) the core, so you’ll need to update and restart your core. Clients are not affected. Also, this exploit can not be used to affect anything on your system, including your local account, as it is purely IRC related.   We are sorry for any inconvenience this causes to you, and hope this first will also be our last security fix for a long time to come…  ","categories": [],
        "tags": ["release"],
        "url": "/2008/10/urgent-security-upgrade/",
        "teaser": null
      },{
        "title": "Let There Be Features - Releasing Quassel IRC 0.3.1",
        "excerpt":"After more than two months, we are finally delivering a shiny new feature release to you! The 0.3.0.x releases were only bugfix releases, based on the “ancient” 0.3.0. In the meantime, we were busy working on new stuff and fixing tons of bugs. In fact, I won’t even bother listing all that stuff here, since you can just click on those links and see for yourself :) Among the features users have been waiting for for a long time and now finally get are day change messages and properly clickable URLs with visual feedback. Another highlight certainly are the on-hover previews of linked webpages.   We are quite proud of quassel-0.3.1, as we’ve put a lot of effort in making it a solid and stable release. So don’t hesitate to grab it from our downloads page or get it from a distribution near you!  ","categories": [],
        "tags": ["release"],
        "url": "/2008/11/let-there-be-features-releasing-quassel-irc-0-3-1/",
        "teaser": null
      },{
        "title": "XMas Hickups",
        "excerpt":"As many of you probably have noticed by now, we have had some server trouble right in time for christmas. We are currently in the process of restoring all services, but it will probably take us a few days. So far, we have most of the webpage running again The FAQ is still missing, and we will tweak the theme a bit I guess, as this was just a rather quick hack to make the page work at all with the new Drupal version (yes, we took the opportunity to update that). Git is back too, as are the download pages. The bug tracker is still offline and will be for a few more days probably, as we are evaluating switching to a different software.   Anyway, sorry for the inconvenience.   Merry XMas/Chanukka/Season’s Greetings/Weekend and a Happy New Year :)   ","categories": [],
        "tags": [],
        "url": "/2008/12/xmas-hickups/",
        "teaser": null
      },{
        "title": "Quassel - Coming to a KDE4 near you",
        "excerpt":"As my XMas present to our faithful community, I have merged my branch named “kde” into git master a few days ago. As the name suggests, this brings you the long-awaited optional KDE4 integration! Mostly this means that Quassel, with KDE integration enabled, will use your KDE icon and color theme, it gives you editable shortcuts, and - finally - full support for knotify (the KDE notification system). Some more things will probably follow soon.   Meanwhile, EgS has been busy pimping the core, adding extended backlog features, query merging, proxy support, SSL authentication (e.g. for OFTC) and more cool stuff. We will now focus on usability issues and general UI polishing, thanks to seele’s efforts who gratiously took the time to thoroughly review Quassel’s UI.   All this will of course be part of the next release, quassel-0.4.0, due early 2009. So that’s definitely something to look forward to in the new year ;-)   Update: Just to avoid confusion: KDE integration is an optional feature, and it will stay an optional feature. We do not intend to enforce a KDE dependency, since many Quassel users don’t use it (for some bizarr reason ;-)), and it would be a mess on Windows and MacOSX anyway. This does not mean that our KDE4 users should have to miss out on great features like shiny Plasma bubbles though :)   ","categories": [],
        "tags": [],
        "url": "/2008/12/quassel-coming-to-a-kde4-near-you/",
        "teaser": null
      },{
        "title": "The Review",
        "excerpt":"Since people keep asking us what our view is on the usability review seele recently did about Quassel IRC, I thought I should blog a little something.   First of all, it didn’t hit us as a surprise. We’ve been in contact with kubuntu about their plans before, and we’ve ongoing discussions with seele and other kubuntu devs about how to make Quassel suitable for new users, in particular for kubuntu’s main target group. Many things seele mentions in her review have been on our TODO list for a while now, but of course, being developers, we tend to put such issues off in favor of new features… now this whole thing shifts our priorities to focus on usability for a change. Sorry guys, this also means scripting support has to wait again…   Meanwhile, apachelogger is busy making the Quassel packages rock on kubuntu, and now provides nightly Quassel builds via Project Neon. And the Quassel developers, of course, are now busy to convert the review into code :)   Read on for some specific points.    The main issues we have on our agenda now:   Streamline the monolithic client to act more like a traditional IRC client Provide better defaults Make configuration easier  The first issue, of course, is key to provide a good first-run experience for users who are not familiar with Quassel’s client/core concept, or who are just looking for a “normal” IRC client. Of course, we mainly had that use case in mind when we decided to provide a monolithic client. As seele points out, currently our core connection dialog does not make it obvious how to use Quassel like that. We will streamline this to make the internal core more prominent (i.e. don’t ask for creating a remote core account), and probably add a way to directly enter network and identity settings if one wants to use the internal core. We won’t completely remove the ability to connect to remote cores from the monolithic clients; we’ll rather make it clear that this is an advanced feature. For kubuntu, we will probably add a compile-time option to hide the remote core options altogether by default. This should help new users to quickly get started with Quassel, and still allow advanced users to use remote cores.   “Better defaults” mainly concerns the buffer views we show when you start Quassel for the first time. Many of our users don’t even know that they can create custom views which allow the hiding and rearranging of channels. Instead, we plan to create a sensible set of custom views by default, and hide the “All Buffers” view. In fact, EgS has recently added a way to unhide hidden channels without resorting to the All Buffers view. Lack of that ability was the main reason for even having the All Buffers view, so this is the first step in making this better.   The configuration dialogs need some love as well. seezer is already busy fixing many of the UI issues seele pointed out, and I will tackle the styling options soon (i.e., make setting colors and fonts easier). With KDE integration enabled, you already get the standard “Configure Notifications” dialog from KDE rather than our own notifications, which should help to remove confusion about all the different options.   There are more issues, of course, and we’ll see how far we get with those until kubuntu goes into version freeze. Rest assured that the Quassel developers put a lot of effort into this, so the next release should have some visible improvements for you guys :)   Back to hacking now. Oh, and a Happy New Year!  ~ Sput  ","categories": [],
        "tags": [],
        "url": "/2009/01/the-review/",
        "teaser": null
      },{
        "title": "I'm going to FOSDEM!",
        "excerpt":"Title says it all. If you want to meet one of the Quassel hackers, you have a chance to find me in Brussels on February 6th-8th. I will make sure to not miss the Beer Event on Friday evening, of course :)  ","categories": [],
        "tags": [],
        "url": "/2009/01/im-going-to-fosdem/",
        "teaser": null
      },{
        "title": "Embedded Build System Voodoo",
        "excerpt":"Qt has this nice feature that you can embed arbitrary files into your binary, and access these so called Resources via special paths starting with a colon. For the longest time, Quassel has exclusively relied on resources and embedded all its data files, including icons, into the binary. This had the advantage that we could always be sure to find all required files at a certain location and need to provide fallback mechanisms. It also meant that Quassel binaries didn’t need to be installed; they were completely standalone and could just be run from any location. Quite nice especially on a platform like Windows that does not have standard locations for all sorts of data files. And on Linux, whose various flavors still do not always agree where stuff should go.   Now, where’s the problem with that approach? For once, the binaries get bigger. Maybe not on the file system (having dozens of small files tends to waste a lot of space due to fragmentation and partial blocks), but certainly in RAM. It also increases loading times a bit. Then there was the issue with translations. We would embed all translations into the binary - obviously a waste of space even though each individual language file is surprisingly small. The LINGUAS variable, restricting the languages to be built, helped a bit, but not much. Distros tend to provide language packs, so support for external files would be needed. But the real killer was KDE integration - KIconLoader, for example, wouldn’t look into our binary to find an icon, obviously. So for KDE support, we needed to install the icons separately. Consequently, Quassel gained support for that a while ago, complete with some confusing cmake options. Over time, we got more data files, such as .knotifyrc for KDE’s notifications, and networks.ini containing predefined network definitions. As it turned out, our build system installed them in locations that would be re-found at run-time only by pure luck, if at all. And it would fail completely on Mac and Windows.   I have fixed that in the past couple days, and Quassel now has proper data file handling. Read on for more information, in particular if you are a distro packager!  First of all, the old cmake options -DOXYGEN_ICONS=External and -DQUASSEL_ICONS=External are gone. They were confusing at best, and road to failure in the worst case. In particular, we didn’t install the Oxygen icons at all if the former option was specified; the rationale being that we would then rely on a system-installed icon theme. Nice idea, but one that goes horribly wrong in a world where icon names and paths change all the time. With Quassel releases not synced to KDE, it would be pure luck to find an Oxygen version that matches all the names used in Quassel. Or one that even contains all the icons, since some of them won’t appear in kdebase before KDE 4.3… So we will need to install both our own and the used subset of Oxygen icons in any case, either as a resource, or into the filesystem.   I figured it wouldn’t make sense to provide bunch of options to specify if various types of files (icons, translations, other data files) should be embedded or not. There is only two cases: Either you want a standalone binary, in which case everything should be embedded, or you install properly, in which case you can as well install all the files. So now there is only one option: -DEMBED_DATA={ON, OFF}, with ON being the default for now. If you set it to OFF, all files get installed externally. Note that this is not yet fully supported on Windows and Mac. You can influence the install location for data files with -DDATA_INSTALL_DIR. The default should be fine though; things go into $PREFIX/share/apps/quassel on Linux for non-KDE, and into whatever-KDE-specifies with KDE support enabled. On Windows, everything goes into %APPDATA%/quassel-irc.org/share/apps/quassel. Mac still needs some love; I don’t know enough about that platform myself.   Both the icon loader and the data file finder have been thouroughly reworked to properly work with scattered files. This includes the search order for icons. A system Oxygen theme (often installed in $data/share/icons) will be preferred over our own copy in $prefix/share/apps/quassel/icons. Afterwards, the hicolor theme will be used as a fallback. Translations go into $prefix/share/apps/quassel/translations.   One side remark probably not interesting for anyone: I have found some cmake feature I didn’t know before. PARENT_SCOPE for setting variables in the enclosing scope. This allowed me to greatly simplify some parts of the build system. I also fixed a whole lot of other issues, most but not all of them related to external data files.   I hope this will help in particular distro packagers! Next up: Bumping our version of Oxygen to include the gorgeous artwork Nuno Pinheiro has done for us, and making sure that we only ship the icons we need rather than most of Oxygen.   But now, sleep.  ","categories": [],
        "tags": [],
        "url": "/2009/01/embedded-build-system-voodoo/",
        "teaser": null
      },{
        "title": "$HOME, sweet $HOME",
        "excerpt":"One of the more enduser-confusing issues with Quassel used to be its storage locations for settings and the backlog. The various platforms Quassel supports handle the storage of configuration much differently. Qt helps us there with abstracting this away, and giving us for example QSettings, which allows for the storage of configuration data in the platform’s native format without having to bother about platform issues. In particular, this means that settings go into the XDG location on Linux (usually in $HOME/.config/), into .plist files on Mac, and into the Registry on Windows.   All nice and dandy, but what to do with data files, such as the sqlite storage? Well, Mac has a standard location for that, as does Windows (%APPDATA%). On Unixoids, such data traditionally goes into $HOME/.. And that's where the trouble started.  First of all, on Linux (and other Unixoids, of course) we ended up with configuration data stored in two locations, $HOME/.config and $HOME/.quassel. Since users tend to expect the latter, they often only backup'd or transferred this, and never knew about the other location. Windows users, on the other hand, complained about Quassel polluting the Registry, making a config transfer to another box infeasible, and leaving traces on the machine even when running from a USB stick.   One of the most annoying issues in particular for distro packagers, however, was the need to have a writable $HOME directory. Many distributions like running daemons like quasselcore without a home directory (e.g. as user “nobody”), putting the global configuration into /etc or even /var. This could be workarounded, of course, by adding a special user with some home directory in one of these locations; but then, you’d end up e.g. with /etc/quassel/.quassel/Quassel Client.conf. Not pretty.   Now, a couple days ago, I have fixed this issue in git master. On Linux, Quassel will now store the configuration, the database and the core certificate in a common location. By default, this is using XDG, e.g. $HOME/.config/quassel-irc.org. It can be configured, however, by starting the binaries with –configdir=/any/path/you/like. Note that in any case, the ugly spaces in the file and folder names are gone.   On Windows, settings move out of the registry into .ini files in %APPDATA%/quassel-irc.org. On Mac, nothing changes for the time being, as the locations we used there always adhered to standards quite firmly entrenched on that platform.   To make the switch as seamlessly as possible, all files will be migrated automatically to their new location, if possible (i.e. if you didn’t specify the now obsolete –datadir option before) as soon as you run a current Quassel for the first time. Note that the database file will be moved (not copied), but settings will be copied (i.e. the old version won’t be touched). On Windows, the contents of the relevant registry keys is copied into the new .ini files.   If migration does not work, be sure to move all files into the locations described above yourself. The settings files are now called quasselclient.conf and quasselcore.conf (or .ini on Windows). The folder names changed from Quassel, Quassel Project and .quassel to quassel-irc.org, since this is the new pink now.   I hope that those changes will make life for some people a bit easier, and not annoy most other users :)  ","categories": [],
        "tags": [],
        "url": "/2009/01/home-sweet-home/",
        "teaser": null
      },{
        "title": "HOWTO make your app work with Qt 4.5",
        "excerpt":"With Qt 4.5-rc1 recently released, we’ve stumbled over a strange issue with Quassel. A binary compiled against Qt 4.4 would completely freeze when used with Qt 4.5. This problem mostly hit users on binary distros trying out Qt 4.5. As it turned out, recompiling Quassel against Qt 4.5 magically fixed the problem - but of course, this is not an option for distro packagers, as they will have to provide packages built against 4.4 at least until 4.5 hits their distros proper.   So we hunted for that bug, to no avail at first, but then EgS stumbled over dug into the strange dungeons of his memory, and there found lurking a blog entry by one of the Trolls:    Well if you leave the code as it is then you will either get a crash in your code or it will simply cause the application to hang because the QRegExp object passed into QString::indexOf() is no longer modified. The good news is that there is a solution which you can use now even if you are not switching to Qt 4.5 straight away. What you should do is change the calls from QString::indexOf() to QRegExp::indexIn().    We found one location in our code where we did this, and changed that:      matches[i] = str.indexOf(regExp[i], qMax(matchEnd[i], idx));   matches[i] = regExp[i].indexIn(str, qMax(matchEnd[i], idx)); &lt;/code&gt;   This seems to fix the issue, and Quassel binaries built against Qt 4.4 now reportedly work with 4.5.   What I don’t get: I can see how “not modifying the QRegExp object” causes our code to hang here, and why the above makes it work again. But why the fringle does a mere recompile against Qt 4.5 fix that issue as well? Does the regexp magically become modifiable again? Luck? Karma? Voodoo? Anybody can help me out there? ;-)   ","categories": [],
        "tags": [],
        "url": "/2009/02/howto-make-your-app-work-with-qt-4-5/",
        "teaser": null
      },{
        "title": "The World in a Donut",
        "excerpt":"This was one of the comments our new shiny application icon caused, and it was even suggested as our new tagline. I LOL’d :)    I would like to thank again Mr. Oxygen Nuno Pinheiro for his terrific artwork for both KDE4 and Quassel. Most of the icons you see in Quassel are made by him and the rest of the Oxygen Team. Kudos!    We have been fading out our old logo, the All-Seeing Eye, during the past few weeks. This was created by John “nox” Hand, who deserves kudos for his work as well, of course. Thank you! Your logo has served us well for a long time, but now it’s Oxygen all the way…   New Quassel artwork coming to a release near you in only a few days!  ","categories": [],
        "tags": [],
        "url": "/2009/02/the-world-in-a-donut/",
        "teaser": null
      },{
        "title": "Quassel IRC Proudly Presents: 0.4.0!",
        "excerpt":"After about three months of hard work, the Quassel Team has tagged the brand-new and extra-shiny 0.4.0 release for you! And for extra convenience, we even have updated our downloads page! To reach this important milestone, 432 commits went into Git since 0.3.1.   As usual, you can find most features we have added in the FeatureLog, and if you are really interested, you can peruse the Git history. Let me highlight the most important things right here though.     KDE integration. Yes, Quassel finally gained support for integrating into KDE4! Most notably, this means that your style, icon theme and colorscheme should be picked up correctly, and Quassel uses the KDE notification system for highlights. Note that, if you compile Quassel yourself, you need to pass -DWITH_KDE=1 to cmake to enable this. Note also that KDE4 support is optional, and will always be optional, so if you don't use KDE4, have no fear :) Many usability and UI improvements all over the place. Things like context menus in the chat window and channel lists, clickable URLs, improved dialogs, streamlined default settings, and much more. Kubuntu provided us with invaluable feedback in order to make Quassel IRC suitable for IRC novices. Their push to use Quassel as their default IRC client, intended as a primary support tool, certainly motivated us to tackle many of the usability issues we had ignored earlier :) Streamlined monolithic client. While the monolithic client, combining client and core in one binary, has always (yes, always!) been around, it was disabled by default until recently. The main reason for this was the fact that it was awkward to use and confusing to users; before the 0.3.1 release, you actually had to configure a core connection to localhost, and in 0.3.1, you still had to start the internal core by pressing a button in the core connection dialog. With 0.4.0, the monolithic client completely hides the client/core concept from the user, making Quassel act like a traditional, non-distributed IRC client. Unfortunately, for now you cannot use the monolithic client for connecting to a remote core. This functionality will be back in a later release; for now, you need to use quasselclient instead. Gorgeous new artwork. Nuno Pinheiro of Oxygen fame has provided us with a shiny new application icon, animations for the system tray icon, plus a bunch of irc-related actions. We have added new icons to the nick and channel lists and in other places too. So Quassel now looks a whole lot nicer than it used to ;-) Improved SSL support. Quassel now supports certificate handling for both the client/core and the core/IRC connections. You can now also use certificate-based authentication for IRC networks supporting it, such as OFTC. Centralized data and config storage. We are now storing all configuration and backlog data in one place, rather than scattering it in several directories or the registry. See this blog entry for details. Note that while your data should be migrated automatically, it might sometimes not. So if your Quassel complains about missing configuration, or wants to start with a blank database, be sure to first check for this!   A note to translators: We couldn’t impose a string freeze for the 0.4.0 release, as we were working on the UI until the last minute, and we had a pressing deadline this time to meet Kubuntu Jaunty’s feature freeze. We consider the 0.4 branch stable now in terms of strings (i.e., we don’t expect changing strings around there in the future), so please send in updated translations for 0.4 now! We will collect them and release a 0.4.1 containing them later on.   A note to distro packagers: We have created a 0.4 branch now that will see important bugfixes backported, but no new features. If your distro has version freezes, packaging 0.4 is what you want. Note that 0.3.0.x is now officially unmaintained, and since 0.3.1 was a transient release without backport support, there will be no more 0.3.x releases.   That’s it for now. Be sure to get the new release as long as it’s still fresh and tasty, and start looking forward to a plethora of new features to be implemented in the 0.5 release cycle :)  ","categories": [],
        "tags": ["release"],
        "url": "/2009/02/quassel-irc-proudly-presents-0-4-0/",
        "teaser": null
      },{
        "title": "Fixing teh bugz: 0.4.1 released",
        "excerpt":"We have recently tagged a bugfix release for the stable branch, appropriately named 0.4.1. Users of 0.4.0 are heavily recommended to upgrade. Note that no new features have been added; users of the development version from git should not use 0.4.1 as it would be a downgrade.   Some of the bugs fixed include:   Correctly display images in the web preview in static builds Improve selection and multi-line paste behavior Fix cert handling for identities Create a proper default identity for new networks Improve ping timeout detection (don't time out after 30 seconds with a shaky connection) Fix bufferview sorting Updated and new translations: Slovenian, Russian, French, Czech, German, Turkish Improve flood control (avoiding Excess Flood in most cases) Various improvements to the build system   You can grab the new release from our download page; many distributions also have updated packages available already. &lt;  ","categories": [],
        "tags": ["release"],
        "url": "/2009/03/fixing-teh-bugz-0-4-1-released/",
        "teaser": null
      },{
        "title": "Bug Wars: The Phantom Release",
        "excerpt":"People closely following our development in git will have noticed that we have tagged a 0.4.2 release back in May. Some distros also have been shipping 0.4.2 for quite a while now. However, there never was an official release announcement. Why?   Well, shortly after tagging this release, we got feedback from several users that Quassel would crash on startup, in particular (but not only) if it was started hidden to tray and one clicked the tray icon to bring it to front. With Quassel crashing consistently for some people, we decided to not announce the release until a solution has been found.   This crash bug is documented in http://bugs.quassel-irc.org/issues/663 and we have been frantically trying to hunt it down and fix it. However, so far we haven’t been successful. For once, I can’t reproduce this, which makes debugging hard; also, it seems to be a Heisenbug which goes away as soon as you attach a debugger to look into it. In our desperation, kaffeedoktor is now trying debugging this issue on Windows using MSVC, hoping that its debugger can shine some light to the reason. At the moment, it appears to be hidden deeply in Qt’s MVC framework. Investigation is still ongoing.   We have, however, figured out a way to workaround this crash-on-startup, and this workaround is currently being evaluated. If it works well, we’ll be releasing a 0.4.3 together with 0.5.0 in roughly a week from now. So stay tuned!  ","categories": [],
        "tags": [],
        "url": "/2009/08/bug-wars-the-phantom-release/",
        "teaser": null
      },{
        "title": "Short Notice: Protocol Break",
        "excerpt":"As we have tagged a 0.5 release candidate now, which has made its way in Kubuntu Karmic and Jaunty backports, among others, we should point out that the client/core protocol used in 0.5 is not compatible to the 0.4.x releases anymore. This means you’ll need to use a 0.5-rc1 client with a 0.5-rc1 core. Same for current git master, of course. The protocol change gives you a great performance boost in the core, in particular for startup, shutdown, and joining/quitting large channels. So it’s definitely worth it :)   As this is isn’t an official release yet, it’s not linked from the download page. However, you can find binary builds for Windows and MacOSX here.   ","categories": [],
        "tags": [],
        "url": "/2009/08/short-notice-protocol-break/",
        "teaser": null
      },{
        "title": "Good News Everyone: Presenting Quassel 0.5.0!",
        "excerpt":"It’s been a while that we have announced a new release. Somehow, 0.4.2 and 0.4.3 never made it to the frontpage… Anyway, we haven’t been lazy and quietly worked on bringing you a brand new feature release: quassel-0.5.0!   You can find most features we have added in the FeatureLog, and if you are really interested, you can also browse the Git history. A list of the most important things has been added below for your convenience. First though I want to get a few important notes out:   Client/Core protocol, database schema and config file update: As mentioned before, a 0.5 Quassel Core will not work with a 0.4 client and vice versa. You will have to update both components. First time you run a 0.5 core or client, the config files and database will automatically be updated to the new format. Downgrades are not supported, so do make a backup if you intend to go back to 0.4 afterwards!   A note for distro packagers: We will maintain a 0.5 branch in our repository that will receive important bugfixes, but no new features. We will probably also do periodic 0.5.x releases from this branch, while new and shiny stuff is being added to the master branch. If you maintain Quassel on a distro that suffers from version or feature freezes, you should make sure to track the 0.5 branch instead.   Read on for a short list of the most important features, then head over to the downloads page to grab it while it’s still sizzling!     PostgreSQL Support. In addition to SQLite, the core now also supports using a postgres database for storage. This is recommended in particular if you run Quassel core with several users, as SQLite tends to get slow then. Run quasselcore --help for information about how to switch (your data will be automatically migrated to the new backend if you select it).  /exec Support. This allows for running external scripts or programs and piping their output into IRC. For Linux, we provide a sysinfo script (/exec inxi) and a now-playing script for MPRIS-compliant media players such as amarok (/exec mpris amarok).  Ignore List. Yes, finally you can get rid of all the trolls (no, I don't mean you, Nokia Trolls! ;-)… either dynamically (so you can retroactively show them again) or permanently (in which case they won't get into your database at all).  Multiline Input. A long requested feature that allows you to have multiple lines in your input field and edit them before sending them off all at once. Press Shift+Enter to start a new line, or paste something with more than one line into the input field.  Smart Nick Completion. Quassel will now prefer users that have last talked in a channel, instead of going through the nicknames alphabetically. This should greatly reduce \"mis-tabbings\" ;-)  Full Stylesheet-Based Styling. We have extended support for Qt stylesheets (QSS) to allow extensive styling of the chat window. As an example (and for getting back the nice and colorful appearance we had in prior versions of Quassel), you can select the m4yer.qss stylesheet that should be installed in your data dir. We will work on improving this feature in future versions, and also document how it works soon.  Usability Improvements. Most notably, we have renamed all occurences of \"Buffer\" to \"Chat\", so instead of Buffer Views, we now have Chat Lists. This has been done because users not familiar with curses-based IRC clients (or Emacs) were getting confused with the term \"Buffer\". In addition, we have redesigned and reorganized more configuration dialogs, and removed the dreaded color settingspage.  Performance Improvements. Ever had trouble with Quassel Core taking minutes for starting up or shutting down? Ever noticed that joining or leaving a large channel could stall both client and core for ages? This has been fixed thanks to an improved client/core synchronization protocol.  For a more complete list of new stuff, please have a look at the afforementioned resources, or just try it out yourself!   ~ Sputnick out.  ","categories": [],
        "tags": ["release"],
        "url": "/2009/10/good-news-everyone-presenting-quassel-0-5-0/",
        "teaser": null
      },{
        "title": "Get The Text - Call For Translations",
        "excerpt":"We have now switched the git master version of Quassel to support gettext translations (.po files) as opposed to Qt translations (.ts files). Qt &gt;= 4.5 provides the tool lconvert which can convert between the two, and we (al, in fact) have modified the build system to use that.   Our hope is that using the wide-spread .po format will attract more translators, as they can use their usual tools and workflows. We currently have more or less current/complete and actively maintained translations for Czech, Finnish, French and German, and more or less outdated ones for Danish, Hungarian, Italian, Norsk, Russish, Slovenish and Turkish. Any help is appreciated, but please consult in our IRC Channel first to avoid duplicating work.   If existing translation teams (such as KDE’s or Ubuntu’s) are willing to work with a project that’s not hosted on their infrastructure, that would be very appreciated too, as this would probably help with the coordination effort.   Thanks!  ~ Sputnick  ","categories": [],
        "tags": [],
        "url": "/2009/10/get-the-text-call-for-translations/",
        "teaser": null
      },{
        "title": "Supporting New Cuties - Quassel 0.5.1",
        "excerpt":"We have just tagged, packaged and published a bugfix and maintenance release for the 0.5 branch. Most notably, 0.5.1 fixes some problems with the newly released Qt 4.6-rc1. Also, newly joined channels are now properly rejoined on the next core restart. The scrolling behavior on initial backlog fetch for a channel has been fixed, and some more small stuff.   This release also includes updated translations for French, Italian, and Finnish. And you’ll get jussi01’s dark stylesheet as a bonus!   Anyway, head over to the downloads page to grab it!  ","categories": [],
        "tags": ["release"],
        "url": "/2009/11/supporting-new-cuties-quassel-0-5-1/",
        "teaser": null
      },{
        "title": "Another Bugfix Release: 0.5.2",
        "excerpt":"We have another bugfix release for the 0.5 series. Quassel-0.5.2 mostly contains build system fixes for recent versions of KDE and Qt. Some issues with netsplit handling have also been fixed. Also, if you accidentally had your menu bar vanish, you can now use the context menu on the chatview to re-enable it ;-)   For workarounding the recent flooding issues with Freenode, we have added a quick way to ignore CTCP requests. Since Freenode has fixed the problem the other day, using this should no longer be necessary for now.   You can grab the new release at the usual location!   ~ Sput  ","categories": [],
        "tags": ["release"],
        "url": "/2010/01/another-bugfix-release-0-5-2/",
        "teaser": null
      },{
        "title": "Rosetta's Stone - Note for Translators",
        "excerpt":"This is primarily a message for our current translators.   Daniel “al” Albers has finally managed to figure out a workflow how to correctly handle .po (gettext) files for translating Quassel (a non-trivial problem, since Qt stupidly insists in using its own format). Now that Quassel uses what the rest of the world uses, this also means that we now enable the use of standard tools for translating.   It so happens that Quassel has now been imported into Rosetta, Launchpad’s (Ubuntu’s) tool for managing translations. Which is cool, because in the two days it’s been sitting there, we can already see a ton of new translated strings, plus it looks like we are getting heaps of new languages up to fun things like Colognian or Low German…   But this also means that there will be a change in our current way of handling translations. Until now, various cool people have been sending translations patches directly to us, maintaining a dozen of languages that way. In the future, this probably will have to happen via Launchpad. We are still figuring out a workflow how to get the Rosetta translations back upstream, but it certainly is our intention to do that, rather than letting Ubuntu maintain their own set of language packs.   If you helped with translating Quassel before, please wait with further work until we have put all the pieces together. We wouldn’t want you to duplicate work, or do work that gets invalidated later. So far, your existing translations have been imported into Rosetta, so nothing got lost :) I will come up with a follow-up blog as soon as we have figured out how to handle translations in the future.   Let’s answer a few Q&amp;A:    Q: Why do you intend to switch over to manage translations by third-party tools/teams? A: While some languages are very well maintained, others have grown stale over time, as some contributors are busy or have found other interests. Also, while a dozen languages is quite impressive for an independent, rather small project like Quassel, there are many more languages in the world. Having experienced teams to handle that will certainly improve both the number and the quality of our translations.   Q: I would like to continue helping you with translations! A: I am sure the Rosetta language teams will be happy to accept contributions. It is a community site that also seems to make it quite easy for individual translators to add strings without going through the hassle of getting a git checkout, sending patches etc.   Q: Why did you choose Ubuntu’s Launchpad, and not, say, KDE’s teams for translating Quassel? A: First of all, we didn’t “choose” this, it was offered to us and the import happened more or less automatically once we had proper gettext support going. Secondly, we do have quite good relations with Kubuntu downstream, and they helped us getting the localization stuff in shape in the past months. We also have synced our releases with Kubuntu releases for a while now, which certainly helps getting translations in time for final releases (due to a string freeze in place a few weeks before that). Lastly, getting Quassel to use KDE’s infrastructure would’ve been a lot of effort. We’re not hosted in their repositories and we don’t use KDE’s localization mechanisms (due to KDE support being optional). Supporting Rosetta, on the other hand, didn’t require any upstream changes (so far) other than getting gettext working properly.   Q: I used to translate Quassel, and now I feel alienated by your decision to switch to something else! A: Don’t! We are very thankful for all the hard work you’ve done before, and none of your work has been lost as it all has been imported. You can also continue to contribute via Rosetta, if you’d like!   That’s it for now!   ~ Sput, feeling excited about getting a Quassel in Colognian  ","categories": [],
        "tags": ["translations"],
        "url": "/2010/02/rosettas-stone-note-for-translators/",
        "teaser": null
      },{
        "title": "Bumping cmake requirement",
        "excerpt":"Following KDE’s example, Quassel’s master branch (what will become 0.7.x) will require CMake &gt;= 2.6.4 for building starting in May (about two weeks from now). The reason for this is that our KDE integration obviously uses parts of KDE’s build system, and we’d like to avoid spurious bugs by something not working as expected in some random script included somewhere, just because your CMake is too old.   CMake 2.6.4 has been out for a long time (we’ve been at 2.8.x for ages!) and should be included in most, if not all, distros. If it isn’t, you can just use a recent binary release for cmake, untar it somewhere, and use that instead of the system installed one.   Quassel 0.6.x will continue to work fine with cmake-2.6.2; this change will only affect the development branch.  ","categories": [],
        "tags": ["buildsys","packagers"],
        "url": "/2010/04/bumping-cmake-requirement/",
        "teaser": null
      },{
        "title": "Rosetta's Stone Part II",
        "excerpt":"As mentioned in the previous article, we’ve been trying out Launchpad/Rosetta for translations for the past few months. It took us a while to get the workflow right, since Qt still uses its own translation format that nothing else uses, and conversion is shaky; but Daniel “al” Albers with some help from Kubuntu translation expert David “dpm” Planella have gotten it working at last. Thanks!   The results have been encouraging; we have quickly gained several new languages, and existing translations have been improved thanks to the Kubuntu translation teams.   However, we also still have several contributors that prefer using their own tools over having to register at Launchpad, and would like to continue to send in translations as patches. Good news: al is willing to handle those and merge them with the Rosetta contributions! It would be best to send them to &lt;translations at quassel-irc org&gt; as that gets straight to the correct person. Please make clear which branch your translation applies to, so we can make sure to apply it correctly!   After we have merged your translation, it will also be included in Rosetta with the next package upload, overriding whatever was there before. We’d suggest having a look at Launchpad first though, to check which languages are already being translated and avoid duplicating work. Or poke us in IRC and ask beforehand, if it makes sense.   Thanks to all of you helping to make Quassel awesome in many languages!   Update: Fixed the mail address that was eaten by Drupal, and also removed some false information about Rosetta branches (looks like it points to master now, rather than the stable branch).   Update 2: Fixed Rosetta links   Update 3: We now also support translations via Transifex. Please read the followup blog entry for more details.   ","categories": [],
        "tags": ["translations"],
        "url": "/2010/04/rosettas-stone-part-ii/",
        "teaser": null
      },{
        "title": "Bumping Quassel: 0.6.1",
        "excerpt":"It’s that time of the year again, when we proudly do new feature release of Quassel IRC! You might wonder why we’ve skipped the announcement for 0.6.0, though. The reason for this is that shortly after tagging, we’ve discovered two serious bugs in that version. One could make the monolithic client try to select the PostgreSQL backend rather than SQlite; the other would lead to a crash on startup in some setups. Since we usually let some days pass between tagging and announcing a release, those bugs were found and fixed before we’d officially released 0.6.0. Two days later, we tagged 0.6.1.   There are several major features in this release:    Completely reworked client/core connection featuring the long-awaited reconnection and Solid support as well as a streamlined UI Support for the new DBus-based system tray of KDE and, in some distros, Gnome (StatusNotifier spec) Improved notification handling Support for inputting formatted (colored/bold/...) text SASL auth support (replaces NickServ e.g. in Freenode) Several new languages and improved translations for alreay existing ones Build system improvements   See the ChangeLog for a more exhausting list of new features. Of course, we’ve also fixed many bugs and optimized some things in this release ;-)   As usual, we’ll maintain the 0.6.x branch in feature and string freeze at least until 0.7.0 is released. This means that we’ll backport bugfixes where it makes sense, but don’t introduce new stuff in 0.6.x versions, in order to make packagers of freeze-loving distros happy.   Now go and grab this latest release of your favorite IRC client!   ~ Sputnick  ","categories": [],
        "tags": ["release"],
        "url": "/2010/04/bumping-quassel-0-6-1/",
        "teaser": null
      },{
        "title": "YANT (Yet Another Note for Translators)",
        "excerpt":"After doing some more experimenting with translation workflows, our Master of Translation Daniel “al” Albers has agreed to support Transifex as an additional means to create and maintain translations for Quassel. Thus, people not having or wanting a Launchpad account can use the Transifex portal for contributing translations now!   Since we’re not dependending on Ubuntu downstream for managing the translations at Transifex, we are a bit more flexible when it comes to working with contributors, and we can sync the codebase with it more easily and more often. Please do check the other system though before starting, in order to not needlessly duplicating work.   al will integrate translations from both systems into Quassel, so we’re not abandoning Launchpad/Rosetta, just providing an alternative.   In short, you can now use the following two frontends for helping Quassel be international:   Transifex - the open translation platform  Launchpad/Rosetta - Ubuntu Translators   Thanks for listening again, and I’m looking forward to seeing our po/ folder fill up! ;-)  ~ Sputnick  ","categories": [],
        "tags": ["translations"],
        "url": "/2010/05/yant-yet-another-note-for-translators/",
        "teaser": null
      },{
        "title": "Requiring Qt 4.6",
        "excerpt":"In a few days, the master branch (which will become quassel-0.7) will start depending on Qt 4.6 for the client only. Besides giving us some very welcome API additions, and fixing a few bugs we currently have to work around, this also allows us to use Qt Kinetic and the Animation Framework in the future.   Qt 4.6 has been released about half a year ago, and is also required by the current stable KDE release, so we think that most desktop distros should be up to par by now (or don’t care enough about staying up-to-date, in which case they shouldn’t be expected to ship a bleeding edge Quassel anyway). By the time quassel-0.7 is released, even more time will have gone by (and the next stable Qt release should be out).   The core’s dep will remain at Qt 4.4.0 for now, so people running Debian Stable on their server should be ok. The deps for the current stable release 0.6.x won’t be changed, so subsequent 0.6.x releases will still be fine with Qt 4.4 for the core and Qt 4.5 for the client.   ","categories": [],
        "tags": ["qt","packagers"],
        "url": "/2010/06/requiring-qt-4-6/",
        "teaser": null
      },{
        "title": "The Lucky (minor) Number -- Releasing Quassel IRC v0.7.1",
        "excerpt":"It’s that time of the year when we’re releasing a new Quassel, and this time we strongly recommend updating your core or monolithic client at least, as in older versions there was an issue with CTCP handling that might allow bad and ugly people to make your core unresponsive. This issue is also the reason for the 0.7.0 release being officially skipped. People still on 0.6.x and not wanting to update to a new feature release should upgrade to version 0.6.3 in which this issue is fixed as well.   Now read on for a short list of the major new features the 0.7 flavour gives you, besides a ton of bugfixes and translation improvements!     Improved Desktop Environment integration: We now properly support DBusMenu (which gives you a proper tray menu in both GNOME and KDE), improved Ayatana support, and fixed some issues with StatusNotifier Editable shortcuts for all platforms, not only KDE Shortcuts for navigation between chats (Alt+Left/Right/Up/Down) -- though there are still some known bugs there Emacs-style keybindings for the input line Marker line can now be set manually (Ctrl+R), and one can jump directly to the marker line (Ctrl+K) Blowfish encryption (via /setkey and /delkey), also known as mircryption, FiSH or RFC 2045 Fullscreen mode New languages: Greek, Galician, Japanese   You can grab the tarball and the usual binary packages on our download page.   Now on to rewriting most of the core on the road to scripting support!  ~ Sputnick  ","categories": [],
        "tags": ["packagers","release"],
        "url": "/2010/09/the-lucky-minor-number-releasing-quassel-irc-v0-7-1/",
        "teaser": null
      },{
        "title": "The State of Quassel (or: Why Are There No Updates?)",
        "excerpt":"Because people keep wondering why our repository has been rather… quiet for the past few months, and not everybody finds his way into our IRC channel to ask us in person what’s up, I think it’s a good idea to finally blog about this.   I can assure everyone that the project isn’t dead or anything. But the main developers are currently quite busy with real life, mainly with thesis writing, and Quassel development needs to suffer for that for the next few months. We intend to get back to development full steam once these rather time-consuming commitments have been dealt with, and we still have some cool plans in store to make Quassel an even better client once we’re back!   In other news, we did package up 0.7.2 quite a while ago, but we’re still waiting for Windows builds, so it’s not up on the download page yet. You can get the tarball at the usual location though, and also find packages for Mac and the static core in the download dir. Some distros (Gentoo, *buntu) have already been shipping 0.7.2 packages for a while as well.   In even further news, some exceptionally cool things are being done by some of our users. For one, there is a native (!) Quassel client for Android devices under development. QuasselDroid is still work in progress, but I’m told it’s shaping up really nicely. For Maemo/MeeGo devices, Sandro Giessl is working on Quassel2Go, which at present is a version of the standard client modified for small touchscreens. We intend to merge this into the upstream codebase at some point in the future, but for now he maintains his own fork.   That’s it for now. Stay tuned, while I go back to my thesis writing, and rest assured that Quassel will see more development again in just a few months!  ","categories": [],
        "tags": ["release","quasseldroid","quassel2go","packagers"],
        "url": "/2011/06/the-state-of-quassel-or-why-are-there-no-updates/",
        "teaser": null
      },{
        "title": "Quassel IRC v0.7.3",
        "excerpt":"On September 8th, the IRC was in turmoil because someone discovered and actively exploited a bug in Quassel’s CTCP handling that would cause the core to crash when processing a specially crafted CTCP message. What followed was masses of users quitting from Freenode, because their cores crashed.   We found and fixed the issue within a few hours, and have issued a new bugfix release. We strongly recommend updating your core or monolithic client as soon as possible to avoid crashes. Client-only builds are not affected.   Tarball and static core are available from the download page; some distros have already bumped their packages, others should follow soon. Packages for other platforms are not done yet, they will follow shortly.   If you cannot update your core right now, you (this means, all users of your core) should add an ignore rule to globally ignore CTCP requests. This will avoid the crash as well.   Sorry for the noise, but bugfree code is a myth :)   ~ Sputnick  ","categories": [],
        "tags": ["packagers","release"],
        "url": "/2011/09/quassel-irc-v0-7-3/",
        "teaser": null
      },{
        "title": "We are back - with Quassel 0.8.0",
        "excerpt":"Has been a while that this page has seen updates, as we, the main developers, are still too busy with real life to get as much done as we would like. So many plans, so little time…   Thankfully, we have some pretty awesome guys from the community (al, Tucos, johu, kode54, Fish-Face, to name but a few) who help out not only with support in our IRC channel, but also with triaging bugs, and especially with sending patches. So we finally managed to clean out our merge request queue and got a new feature release going!   Quassel 0.8.0 brings you the usual slew of bugfixes, a ton of new languages and additional translations for the existing ones, and a few new features such as syslog support, configurable tab completion key, improved desktop integration and more.   Behind the scenes, and hopefully not noticeable for you, we’ve merged the new event backend into the core. This is more or less a complete rewrite of how the IRC protocol is handled, and the first major step towards full scripting support!   So don’t hesitate to grab the new release and get rollin’!   A note for packagers: The Qt 4.8 release introduced an issue with QTreeView handling that causes parts of the nick list (and sometimes the chat lists) not being shown sometimes. For distributions that don’t believe in frequent feature upgrades, we’ve rolled a 0.7.4 release that only contains this and some other bugfixes, but does not introduce new strings or features. If your distribution backports Qt 4.8, we warmly recommend backporting this version of Quassel as well!   That’s all.  ~ Sput  ","categories": [],
        "tags": ["packagers","release"],
        "url": "/2012/04/we-are-back-with-quassel-0-8-0/",
        "teaser": null
      },{
        "title": "Onwards and Upwards - Quassel 0.9.0!",
        "excerpt":"Yes, yes, I know. Again I have been too quiet on this page, while several major changes have happened in my real life. However, things are slowly settling down, and I could spend more time on Quassel again during the past few months. And as usual, the community has been active as well providing patches, fixes and features - thank you all for that!   So without further ado, I present to you Quassel 0.9.0!   A list of the most important changes can be found in the freshly updated ChangeLog - improved certificate handling, improved OSX support, DockManager compatibility, channel-specific highlights just to name a few features that have been contributed by the community (special thanks goes out to Tucos, who is restless indeed).   Meanwhile, I am slowly continuing to refactor the heart of Quassel, which is the communication between the client and the core. My goal is to abstract the protocol, so in the future it will be easier to write third-party clients. Having a clean protocol abstraction is also a prerequisite for getting things like events and scripting going. Expect more news along those lines in the future!   Oh, we’ve also switched to GitHub as primary means for source code hosting and managing contributions. The main reason for this is that people were unhappy with Gitorious because it was slow, sometimes unreliable, and has a less advanced web interface. So please, if you like to send patches, use pull requests on GitHub - that way, we’ll make sure they won’t get lost.   For translations, please continue to use Transifex.   And that’s it, I think. Thank you all for your patience and continued support of Quassel, and have fun with the new release!   ~ Sput  ","categories": [],
        "tags": ["packagers","release"],
        "url": "/2013/05/onwards-and-upwards-quassel-0-9-0/",
        "teaser": null
      },{
        "title": "Mandatory Upgrade: Quassel 0.9.1",
        "excerpt":"TL;DR: If you’re running Quassel Core or the stand-alone, monolithic client with Qt 4.8.5+ and PostgreSQL, you need to upgrade immediately!   Looks like Qt changed the string escaping rules in their PostgreSQL driver for Qt 4.8.5, which unfortunately may cause database corruption or data loss if you’re running Quassel Core or the monolithic client with a PostgreSQL database and that Qt version. Older versions of Qt are safe, as are the pre-built packages for Windows, MacOSX and the static core from our website. All other users (and distros!) should upgrade their core or monolithic build to the brand-new 0.9.1 version of Quassel immediately. Thanks in particular to Tucos and brot for finding that issue and its cause!   In addition to the fix for this issue, a number of other fixes went into this release, most notably several ones related to key handling for encrypted channels. Also, you should now see Quassel come up in your preferred UI language on MacOSX again (rather than in Japanese).   Note that because of the urgent nature of this release, we couldn’t wait with the announcement until binary packages for 0.9.1 have been provided. Those will be added in the next few days.   That’s it for now. Over and out.  ~ Sput  ","categories": [],
        "tags": ["security","packagers","release"],
        "url": "/2013/10/mandatory-upgrade-quassel-0-9-1/",
        "teaser": null
      },{
        "title": "We Have Mailing Lists!",
        "excerpt":"Hi all,   finally (after years of pushing and prodding for it), we now have mailing lists for Quassel IRC. While most of user support and discussions happens in our IRC channels (mostly #quassel on Freenode), mailing lists have distinct advantages - in particular, there is an archive, and people can chime in asynchronously.   So now we offer the following lists:    quassel-announce  This is a read-only list, where the development team will send important announcements to. We highly recommend distro packagers to subscribe to this one, as we'll announce releases and other important information there.   quassel-users  This list should be used for general user discussion about and around Quassel IRC - questions, tips &amp; tricks, that sort of things.   quassel-devel  This list is for discussion about development of Quassel IRC itself. Everything that is related to development should go there, and we'll share our plans and ideas there as well.    So, feel free to go ahead and subscribe!   Please note that this is my first time setting up a list server, so if the lists show unexpected behavior or have configuration issues, feel free to poke me so I can fix it.   ~ Sput   ","categories": [],
        "tags": ["announcement"],
        "url": "/2013/11/we-have-mailing-lists/",
        "teaser": null
      },{
        "title": "Yet Another Important Update: Quassel 0.9.2",
        "excerpt":"Hi all,   the last update in the 0.9.x series has been released only a few weeks ago, and now it’s already time for another one. Besides various bugfixes (among those, Phonon notifications play sound again!), and a bunch of new and improved translations, the main reason for this one is, unfortunately, another vulnerability: with a carefully manipulated client, you can retrieve the backlog of other users on the quasselcore you’re using. Proper authentication is still needed, so this will only affect people who allow untrusted and malicious users on their shared core. Still, an upgrade is highly recommended.   If you happen to be a distro packager, please be advised to backport (i.e. simply apply) this and, if you haven’t done so yet since the release of 0.9.1, this patch to your packages, if you can’t bump them to 0.9.2 for release process reasons.   Well, here’s hoping that next time we won’t have that sense of urgency again :)   Have a nice day, and happy updating,  ~ Sput  ","categories": [],
        "tags": ["security","packagers","release"],
        "url": "/2013/11/yet-another-important-update-quassel-0-9-2/",
        "teaser": null
      },{
        "title": "Into the Double Digits - Quassel 0.10.0 Is Out!",
        "excerpt":"Hi all,   we proudly announce the latest release of Quassel IRC, version 0.10.0! As promised, development has become more active in the past few months (both because we gained several new contributors (thanks a bunch!), and I myself have finally some more time for development), so besides a host of bugfixes that already went into 0.9.x, this development cycle also saw various new features as listed in the ChangeLog. Besides, for example, various improvements related to SSL connections, optional multi-line input field, support for the Snore notification framework, the ability to show backlog messages in the ChatMonitor (beware though; it will slow down your sync!), the possibility to hide inactive networks in your Chat List, more translations, and a new version of the inxi (/sysinfo) script, this release features a new core/client protocol: the DataStream protocol.   This new protocol is one (intermediate) result of the refactoring work that has been going on behind the scenes for several releases now, aiming for separating out protocol-specific code from the rest of the codebase in order to be able to do things like, well, replacing the protocol (and making it easier for third-party client authors to work with it). The DataStream protocol is not much different from the original (“legacy”) protocol, but it removes some of the unnecessary overhead. Due to a change to data compression, QuasselDroid can finally use compression when connecting to a 0.10.x quasselcore! You can read more about the protocol changes in the Wiki (work in progress). Note that we kept backwards compatibility, so using a new client with an older core, or vice versa, is fine (but won’t get you the new protocol, of course).   That’s about it. Go now and grab the newest version from our downloads page, or directly from your friendly distro’s repositories once it’s there!   One last note for people following development closely and interested in the goings-on in Git: The master branch has seen a revamp of the build system and features full support for Qt5 now (minus some glitches). Soon, we will start using C++11, as announced previously; so make sure to update your toolchain if it’s ancient!   Cheers,  ~ Sput on behalf of the Quassel Team  ","categories": [],
        "tags": ["release"],
        "url": "/2014/04/into-the-double-digits-quassel-0-10-0-is-out/",
        "teaser": null
      },{
        "title": "A Bleeding Heart",
        "excerpt":"Hi all,   as you should have heard by now, a major security vulnerability was discovered in OpenSSL. This does affect Quassel as well, as by default the connection between a Quassel client and core is encrypted using SSL (or, rather, TLS); in particular, it affects you if you run a core that supports SSL and is exposed to the public internet (clients, both monolithic and stand-alone, are not affected because they don’t offer an SSL-encrypted service).   If you host a Quassel core, make sure to upgrade your OpenSSL to at least version 1.0.1g (or whatever your distro deems to be a fixed one), then restart the core. Create a new private key and certificate and replace the quasselCert.pem file in your config directory as described here and restart your core again. Since the vulnerability is in the OpenSSL library and not in Quassel itself, there is no need to update Quassel unless one of the following bullet points applies: If you run one of the static cores offered on our site, make sure to download the newest version; we uploaded a 0.10.0 core built against a fixed OpenSSL version on April 8th 2014, 19:14 UTC. Any older version is vulnerable, as an insecure OpenSSL version was bundled. After replacing the core, follow the previous step to regenerate your key and certificate. If you use our install package for Windows™, and run the core from this package, make sure to download the newest version. We uploaded a fixed package on April 9th 2014, 20:47 UTC. Any older version is vulnerable. First bullet point applies as well. Our MacOSX packages don't bundle OpenSSL; they use the system-supplied version instead. No need to install a newer Quassel core, but first bullet point applies.   After replacing the certificate and restarting your core, you should also change the passwords, as they may have leaked due to the vulnerability.   That’s it. Have fun securing your systems; I know I had… NOT.   ~ Sput  ","categories": [],
        "tags": ["security"],
        "url": "/2014/04/a-bleeding-heart/",
        "teaser": null
      },{
        "title": "New Cuties - Quassel 0.11.0",
        "excerpt":"Hi all,   It’s that time of the year again for another Quassel release! For 0.11.0, we’ve focused mainly on full support for Qt 5.2+ (in addition to Qt 4.6+, which will be supported alongside for the time being). Since Qt 4.x has not seen much development for quite some time, and subsequently we’ve missed out on much work that has been done by the Qt developers, this marks a major improvement in particular for our users on Windows and Mac OSX. Support for both platforms has seen many improvements in Qt 5, and thus our official packages for those platforms are now built against Qt 5. In particular Mac users should be much happier now!   For KDE users it is recommended to still use Quassel built against Qt 4, because KDE integration support has not been ported to the new KDE Frameworks yet. This is something we plan for Quassel 0.12, so stay tuned!   In order to make dual-Qt support easier, we fully revamped the build system, something that was long overdue. The existing build system still came from the dark CMake 2.6 ages, and it was increasingly hard to maintain. So now everything has been rewritten, taking newer CMake features into account. Some build options have changed as a result; in particular, we use package properties now for finding optional dependencies rather than CMake defines. After configuring the build, CMake will output a summary of required and optional packages that could or could not be found, alongside with information on what a particular dependency does and where to find it. The INSTALL file has been updated accordingly.   Starting with 0.11, we also increased the build requirements. A C++11 capable compiler, such as gcc 4.7+, Clang 3.1+, or Visual Studio 2013 (at least the November CTP), is now needed in order to build Quassel from source. In addition, at least CMake 2.8.9 is required. We feel that these are reasonable requirements that should be supported by most current distributions (and there were no objections when we asked around).   Besides these major changes, this release also contains a bunch of bugfixes, most generously provided by our awesome community. Among other things, the handling of database errors has been improved, we now split CTCP lines that are too long (important for role players using /me a lot, I’m told), and some issues with QuasselDroid have been fixed. For those of you who you only want to get those fixes, but not the build system changes, Qt 5 support and the increased build requirements, we tagged Quassel 0.10.1. This bugfix release marks the last of the 0.10.x releases; we will not provide further support for this branch (as usual).   And now, get downloading unless your friendly package maintainer has already done this job for you!   Cheers,  ~ Sput  ","categories": [],
        "tags": ["release","packagers"],
        "url": "/2014/10/new-cuties-quassel-0-11-0/",
        "teaser": null
      },{
        "title": "A Bumpy Road - Quassel 0.12.2!",
        "excerpt":"Hi all,   I’m happy to announce the release of Quassel IRC version 0.12.2! This version now fully supports KDE Frameworks, so Quassel behaves properly in a Plasma 5 environment. Other new features include an improved password hashing algorithm, proper unicode-aware message splitting for both normal and CTCP messages, improved handling of PostgreSQL database connections, a bunch of bugfixes and updated translations. If you connect to a 0.12.x core, you can also now change your core password from the client. Please see the ChangeLog for a more complete list.   Now you might ask: What happened to 0.12.0 and 0.12.1? This is the reason I titled this post “A Bumpy Road”. Very shortly after tagging the 0.12.0 release, we’ve discovered a behavior change in Qt5 in regards to timezone handling in PostgreSQL databases. This resulted in backlog messages being stored with the wrong timezone information for some server setups. The fix for this went into the 0.12.1 release. Unfortunately, this fix also uncovered a more serious issue that has been around for a long time: restarting a PostgreSQL database while Quassel Core is running would not properly re-initialize the database session inside Quassel, bringing back an old security issue that we had deemed fixed. This forced us to create yet another release, so that’s why we are now at version 0.12.2. The new issue is being tracked as CVE-2015-3427. Thanks to Pierre Schweitzer for registering this!   To be clear: We strongly recommend upgrading Quassel to 0.12.2 due to vulnerabilities in older versions, or backporting the patches referenced in the relevant CVE entries! We have also prepared a 0.11.1 release that contains the security fixes, but no new features. Older versions are no longer supported.   With that out of the way, we hope that you’ll enjoy the new version of Quassel! Head on over to our downloads page to grab it, or wait for your favorite distro to provide packages!   Cheers,  ~ Sputnick on behalf of the Quassel Team  ","categories": [],
        "tags": ["security","release"],
        "url": "/2015/05/a-bumpy-road-quassel-0-12-2/",
        "teaser": null
      },{
        "title": "Long Time No See - Quassel 0.12.3",
        "excerpt":"Hi all,   it’s been a while that we did a new release, and it’s still “just” a bugfix release this time. Turns out that real life is still keeping us busy… but it’s the good kind of busy, so there’s that. Thankfully, we have a bunch of cool people in the community who contribute patches, fixes and features while the core development team is on semi-hiatus – many thanks to all of you!   Anyway, say hello to Quassel 0.12.3. Many fixes went into that one, and we encourage you to upgrade! One particularly nasty bug was fixed: if you have multiple users on a single Quassel Core, and use PostgresQL as a database backend, messages could be lost in earlier 0.12.x versions. So if you happen to run 0.12.{0..2}, and run a core for multiple users, you definitely should upgrade. A more extensive list of fixes can be found in the ChangeLog.   A short heads-up: The next feature release (0.13.x) will be the last one still supporting Qt 4 and, consequently, KDE 4. Supporting two diverging frameworks (Qt 4 and Qt 5), and two rather different desktop environments (KDE 4 and Plasma 5), proves to be increasingly challenging. Additionally, Qt 4 has officially reached end-of-life by now. So once 0.13 is release, we’ll take the opportunity to clean up the codebase and remove a few hundred #ifdefs, wrappers and workarounds! This is still a few months away, and we plan to add a long-desired feature or two to the next release – but now you know and can prepare for life after Qt 4!   That’s it for today. Please head to the downloads page to grab the new source tarball. Binary packages for the various platforms will show up there over the next few days, and if you run Linux, I’m sure your friendly package maintainer is already working on getting an updated package near you soon!   Have a nice one!  ~ Sput  ","categories": [],
        "tags": ["release"],
        "url": "/2016/02/long-time-no-see-quassel-0-12-3/",
        "teaser": null
      },{
        "title": "Fixing Bugs - Quassel 0.12.4",
        "excerpt":"Hi all,   while feature development is still slow – too slow for my own taste, really, but what can you do – some rather annoying bugs have been fixed that warrant another maintenance release. Most notably, Tucos (thanks a lot!) has figured out that invalid handshake data may cause the core to crash. Another annoying issue was the lack of support for the STATUSMSG feature available in some IRC networks. This one was recently abused by idio^Wpeople to pop up tons of spam queries for some of our users.   Both issues are fixed in version 0.12.4. We highly recommend people to upgrade their cores, and distros to backport the related patches to older versions they still maintain. As a bonus, translations have been updated for this release, and support for non-compliant IRC networks has been improved. You can find the usual artifacts on our downloads page.   Here’s hoping that my next blog finally talks about new features instead of new bugs!   All the best,  ~ Sput on behalf of the Quassel Team  ","categories": [],
        "tags": ["release"],
        "url": "/2016/05/fixing-bugs-quassel-0-12-4/",
        "teaser": null
      },{
        "title": "Two Years!? - Quassel 0.12.5",
        "excerpt":"Hi all,   yes, it’s been exactly two years today since 0.12.4 was tagged… Even though development speed has picked up again recently (mostly thanks to some very active new and old contributors, and only to a small degree thanks to myself), and several hundred commits have gone into the main development branch since 0.12 was forked away, we’re still some weeks away from a new feature release.   However, chaign_c has recently discovered two vulnerabilites in the 0.12.4 core, so a new maintenance release is warranted (and an immediate upgrade of 0.12.4 cores is highly recommended!). Since it has been so long since the last release, we’ve decided to backport over a hundred commits worth of bugfixes and quality-of-life improvements to make upgrading worth your while. Go grab Quassel 0.12.5 from the downloads page!   Following our usual policy, we did not change the config file format nor the database schema compared to previous 0.12.x releases, and we avoided string and UI changes. Thus, upgrading should be safe, and going back to a previous 0.12.x release is possible in case anything goes wrong anyway. Please have a look at the ChangeLog for a list of major things that went into this release, or check out the full list of commits since the last release.   I’d like to use this opportunity to thank all contributors who keep Quassel alive and kicking despite my own lack of time, be it by providing pull requests, community support, translations, testing, or just being active in our IRC channels. For this release, I want to particularly express my thanks to Janne “justJanne” Koschinski, Michael “mamarley” Marley and Shane “digitalcircuit” Synan for their timely support in handling the afforementioned vulnerabilities so professionally, both providing fixes and very thorough testing! You rock!   Next stop (hopefully): Quassel 0.13. As announced, well, two years ago, this will be our last release still supporting Qt 4 and KDE 4. Afterwards, we’ll also bump our build requirements significantly.   Until then, all the best,  ~ Sput  ","categories": [],
        "tags": ["security","release"],
        "url": "/2018/04/two-years-quassel-0-12-5/",
        "teaser": null
      },{
        "title": "A Candidate Long in the Making - Quassel 0.13-rc1",
        "excerpt":"Hi all,   more than three years since 0.12.0 was released, and over 500 commits on top of what went into the current stable branch, we’re finally in the last stretch of the next major feature release!   Since so much work and changes went into this, this time we’ve decided to not only roll a release candidate, but also announce it publicly, so daring people can test things before final release.   Some caveats upfront: Both the database schema and the config file formats have been updated since 0.12. Quassel will automatically upgrade both once the new version is started for the first time, however no rollback is possible, so do make a backup! Also the upgrade may take a long time (several hours) if your database is (un)reasonably large, during which the core or mono client cannot be used. The upgrade may also temporarily require up to double the disk space. Do not interrupt the upgrade process, otherwise your database may become corrupted!   Nevertheless, the Quassel protocol between remote cores and clients still is backwards-compatible all the way down to 0.5.0, which was released in 2009. While you may not be able to use all the newer features when connecting to older versions, things still work, and there is no need to upgrade both ends at the same time.   This is also a call for translators. If you’d like to improve the localization of Quassel in your language, please head over to Transifex and contribute. We’ll merge back the updated translations shortly before final release of 0.13.0.   Too many changes went into this release to be able to list them all (have a look at the ChangeLog for a reasonable overview), but here are some highlights:      New branding, more modern icons (from the Breeze icon theme)   Better support for icon themes   Many UI improvements   Support for many IRCv3 features, including the display of modern formatting codes   Functionality such as highlights and chat activity tracking move into the core to help mobile clients to be more efficient   Support for containerization, i.e. config-less core   Optional authentication via LDAP   Database improvements, including support for 64 bit IDs and timestamps, and performance tweaks -… and much more!   The usual packages are available for download now:     Source tarball   OSX core, standalone client, monolithic client   Windows installer (32 bit, 64 bit) containing core, client and the standalone client   We’re discontinuing the pseudo-static core, because creating static binaries that run on most platforms becomes increasingly fragile; bundling things like OpenSSL also introduces security risks, since the bundled version will not be updated with the system. Additionally, our binary packages for OSX and Windows do not support the PostgreSQL database backend for the core due to limitations in our build environments, as well as lack of demand.   Do let us know if you run into issues or regressions. Otherwise, we’re expecting a final release in the coming weeks!   NOTE: As announced several times already, 0.13.0 will be the last feature release still supporting Qt4 and KDE4. We’ll significantly bump the build and runtime requirements for future releases in order to be able to modernize the code base. Planned baseline for 0.14 onwards is Ubuntu 16.04 “Xenial”, as well as reasonable recent toolchains for OSX and Windows.   That’s it for now!   Always yours,  ~ Sput  ","categories": [],
        "tags": ["prerelease"],
        "url": "/2018/07/a-candidate-long-in-the-making-quassel-0-13-rc1/",
        "teaser": null
      },{
        "title": "The Final Stretch - Quassel 0.13-rc2",
        "excerpt":"Hi all,   the first release candidate for the impending 0.13 release uncovered some issues, the fixing of which required some more complex changes than we would have liked. Thus, we decided to roll a second release candidate.   Most significant changes compared to rc1:      Rework the init and shutdown sequence as well as signal handling to properly clean up everything on shutdown   Rework the handling of regular expressions e.g. for ignore and highlight rules for more flexibility and better performance. This may break legacy ignore rules; see the migration guide for more information   Please see the updated ChangeLog for more. Of course, the information and caveats mentioned in the release announcement for 0.13-rc1 still apply.   Please head on over to the downloads page to grab the packages, or just click here:     Source tarball   OSX core, standalone client, monolithic client   Windows installer (32 bit, 64 bit) containing core, client and the standalone client   We expect to do a final 0.13.0 release in just a few days, pending discovery of serious issues that would warrant another delay.   Cheers,  ~ Sput  ","categories": [],
        "tags": ["prerelease"],
        "url": "/2018/10/the-final-stretch-quassel-0-13-rc2/",
        "teaser": null
      },{
        "title": "It's happening! - Quassel 0.13.0",
        "excerpt":"Hi all,   1312 days have gone by since the last feature release of Quassel IRC. At times, the project went almost dormant; then it was buzzing with activity again due to some very active contributors (digitalcircuit, justJanne, romibi, mamarley, just to name a few). And in the end, even I could not help myself and had to start coding again! As a result, we can finally unleash a new feature release on you. And what a release it is!   We have a new branding and application icon, support the modern Breeze iconset, and improved icon theme support as a whole. We added a whole bunch of UI improvements, from the ability to show user modes in chat to spell checking on all platforms. Many IRCv3 features are now supported, including the rendering of almost all of modern formatting options. New authentication and configuration options allow for containerization, or for using an LDAP backend for the core. The database now uses 64 bit message IDs and timestamps, making it future-proof for giant backlogs and the year 2038.   Much work went into supporting mobile clients better and improve performance. For example, chat activity tracking and highlight rules moved into the core, so clients don’t need to pull all the backlog at once. The first mobile client to benefit from this is Quasseldroid, which itself has seen a full rewrite that will soon be released to Android phones near you. Of course, these improvements also lay the groundwork for future improvements for the desktop client’s performance.   Please see the full ChangeLog for a more detailed list of changes.   Before you upgrade, please be aware that both the database schema and the config file formats have been updated since 0.12. Quassel will automatically upgrade both once the new version is started for the first time, however no rollback is possible, so do make a backup before starting the new version! The upgrade may take a long time (up to several hours) if your database is (un)reasonably large, during which the core or mono client cannot be used. The upgrade may also temporarily require up to double the disk space. Do not interrupt the upgrade process, otherwise your database may become corrupted!   With that out of the way, please head on over to the downloads page to get yourself a fresh Quassel tarball, Windows installer or OSX package. Or wait until the new version hits a distro near you! As always, feel free to join us in #quassel on the Freenode IRC network if you have questions, or just want to talk to our friendly community.   One final remark: As we have announced a few times now, the 0.13 release cycle is the last one still supporting the all-but-dead-for-years Qt4 and KDE4 libraries. But this it not the only change; behind the scenes, we have already been very busy modernizing the codebase, and we will merge a giant pile of changes into the master branch soon after branching out 0.13. Going forward, Quassel will require a more recent toolchain, as well as system libraries; the baseline we have chosen for the time being is Ubuntu 16.04 “Xenial”, with no intention to support older versions than what’s available there. We hope that this won’t affect too many users; we think supporting a more than three year old setup is reasonable, and it gives us the opportunity to do some sorely needed cleanup and use modern C++ features and libraries going forward.   With all that said, I’m wishing you a nice weekend, and hope you like the new Quassel 0.13.0!   Cheers,  ~ Sput  ","categories": [],
        "tags": ["release","packagers"],
        "url": "/2018/11/its-happening-quassel-0-13-0/",
        "teaser": null
      },{
        "title": "Doing Some Maintenance - Quassel 0.13.1",
        "excerpt":"Hi all,   we’re back in 2019 with a maintenance release for the 0.13 cycle, Quassel 0.13.1. Besides a handful of fixes and improvements over the previous release, 0.13.1 fixes a particularly annoying issue with 0.13.0 on Qt4-based systems where backlog messages would not all be fetched. I’d like to thank Janne “justJanne” Koschinski and Shane “digitalcircuit” Synan in particular for finding the cause for this problem, as well as implementing and testing the fix!   So if you happen to run Quassel 0.13.0 on a system or distro still using Qt4, be sure to upgrade (or ask your friendly distro maintainers to do so), otherwise your chat history may be spotty… Official 0.13.0 builds for Windows and OSX already use Qt5, so they’re not affected. Also any recent distro release should have done the migration already, as Qt5 has been out for quite some time.   Quassel 0.13.1 also makes database schema upgrades more robust by making them resumable, and allows to configure the listen addresses for the built-in identd. Please see the ChangeLog for a full list of changes.   As always, you can find the sources, as well as precompiled binaries for Windows and OSX on the downloads page.   Cheers,  ~ Sputnick  ","categories": [],
        "tags": ["release"],
        "url": "/2019/02/doing-some-maintenance-quassel-0-13-1/",
        "teaser": null
      }]
